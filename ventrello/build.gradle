apply plugin: "com.sourcemuse.mongo"
apply plugin: "org.springframework.boot"

bootRun.dependsOn startManagedMongoDb

dependencies {
    implementation project(":vent-web-server")
    implementation project(":vent-api")
    implementation project(":vent-utils")
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
}

ext {
    projectRoot = project(":ventrello").projectDir
    staticResourcesDir = new File(projectRoot, "/src/main/resources/public-web-resources")
    staticResourcesPath = staticResourcesDir.absolutePath
    mongoStorageDir = new File(projectRoot, "/mongo")
    mongoStoragePath = mongoStorageDir.absolutePath
}

bootRun {
    if (currentState != "RELEASE") {
        systemProperty 'spring.profiles.active', "mockData"
        doFirst {
            println "Static resources served from: $staticResourcesPath"
        }
        systemProperty 'spring.resources.static-locations', "file://$staticResourcesPath"

        systemProperty 'vent.mongo.extension.optimization.partial.value', "15"
        systemProperty 'vent.mongo.extension.optimization.partial.unit', "SECONDS"
        systemProperty 'vent.mongo.extension.optimization.partial.eventCount.min', "5"

        systemProperty 'vent.mongo.extension.optimization.full.value', "1"
        systemProperty 'vent.mongo.extension.optimization.full.unit', "MINUTES"

        systemProperty '--logging.level.com.github.filipmalczak.vent.mongo.extension.optimization.Defaults', "DEBUG"
    }
}

mongo {
    storageLocation = mongoStoragePath
}

task cleanMongo {
    doFirst {
        println "Ensuring empty DB by removing $mongoStoragePath"
        mongoStorageDir.deleteDir()
    }
}

clean.dependsOn cleanMongo

if (currentState != "FEATURE")
    startManagedMongoDb.dependsOn cleanMongo